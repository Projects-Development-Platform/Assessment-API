openapi: 3.0.0
info:
  title: User Management API
  version: 1.0.0
  description: A simple Express API for managing users and file uploads
servers:
  - url: https://assessment-api-biay.onrender.com
paths:
  /users:
    post:
      summary: Create a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad request
        '500':
          description: Internal server error
    get:
      summary: Get all users
      tags:
        - Users
      responses:
        '200':
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '500':
          description: Internal server error
  /users/{id}:
    get:
      summary: Get a user by ID
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: User not found
        '500':
          description: Internal server error
    put:
      summary: Update a user
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: User not found
        '400':
          description: Bad request
        '500':
          description: Internal server error
    delete:
      summary: Delete a user
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: User not found
        '500':
          description: Internal server error
  /upload:
    post:
      summary: Upload a file
      tags:
        - Files
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photo:
                  type: string
                  format: binary
      responses:
        '201':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResponse'
        '400':
          description: File is required
        '500':
          description: Internal server error
  /file/{filename}:
    get:
      summary: Get a file by filename
      tags:
        - Files
      parameters:
        - in: path
          name: filename
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File retrieved successfully
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: File not found
        '500':
          description: Internal server error

components:
  schemas:
    UserInput:
      type: object
      required:
        - username
        - email
        - department
        - role
      properties:
        username:
          type: string
        email:
          type: string
        photo:
          type: string
        department:
          type: string
          enum: [HR, Finance, Marketing, IT, Operations]
        role:
          type: string
          enum: [Employee, Manager, Department Head]
    User:
      allOf:
        - $ref: '#/components/schemas/UserInput'
        - type: object
          properties:
            _id:
              type: string
    UserResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/User'
    FileUploadResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: string
          description: File path